#!/bin/bash

# AtCoder tester

TEST_INPUTS=$(ls in*.txt)

function atc_test() {
	for f in ${TEST_INPUTS}; do
		echo ------test.sh $f-----
		echo "cat $f | tr -d '\r' | $*"
		diff <(cat $f | tr -d '\r' | $1 $2 | tr -d '\r') \
			<(cat $(echo $f | sed -e 's/in/out/') | tr -d '\r')
		if [ $? -eq 0 ]; then
			echo "OK"
		fi
	done
}

if [ $# -lt 2 ]; then
	echo "Usage: chot lang filename"
	echo "lang are:"
	echo "    lua"
	echo "    ocaml"
	echo "    perl"
	echo "    scheme"
	echo "    fsharp"
	echo "    go"
	echo "    py3"
	echo "    gnuc"
	echo "    bash"
	echo "    cs"
	exit 1
fi

case $1 in
lua) atc_test lua5.3 $2 ;;
ocaml) bash -c 'eval $(opam config env) ocamlfind ocamlopt -o ./a.out '$2' -linkpkg -thread -package str,num,threads,batteries' \
		&& atc_test ./a.out;;
perl) atc_test perl $2 ;;
scheme) atc_test gosh $2 ;;
fsharp) fsharpc $2 \
		&& atc_test mono $(echo $2 | sed -e 's/fs/exe/');;
go) go build -o ./a.out $s \
	&& atc_test ./a.out;;
py3) atc_test python3 $2;;
gnuc) gcc -std=gnu11 -O2 -o ./a.out $2 -lm \
	&& atc_test ./a.out;;
bash) atc_test bash $2;;
cs) mcs -warn:0 -o+ -r:System.Numerics $2 -out:Main.exe \
	&& atc_test mono Main.exe;;
esac
