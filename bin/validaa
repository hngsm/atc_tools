#!/usr/bin/env python3

from typing import List, Set, Dict, Tuple, Optional
import sys
import shlex, subprocess

# command_geninputs = "lua5.3 geninputs.lua"
# command_geninputs generates:
#    case1_input\n
#    __EOF__\n
#    case2_input\n
#    __EOF__\n
#    ...
#    __EOF__\n
# command_correct = "lua5.3 naive.lua"
# command_undertest = "lua5.3 a.lua"

def exec_getstdout(command: str) -> List[str]:
    args = shlex.split(command)
    with subprocess.Popen(args, stdin=subprocess.DEVNULL, stdout=subprocess.PIPE) as p:
        (stdouts_bytearray, _) = p.communicate()
        stdouts_str = stdouts_bytearray.decode()
        stdouts_list = stdouts_str.split("__EOF__\n")
        return stdouts_list[:-1] # last element is empty

def exec_putstdin_getstdout(command: str, text_to_stdin: str) -> List[str]:
    args = shlex.split(command)
    with subprocess.Popen(args, stdin=subprocess.PIPE, stdout=subprocess.PIPE) as p:
        (stdouts_bytearray, _) = p.communicate(text_to_stdin.encode())
        return stdouts_bytearray.decode()

def main(command_geninputs, command_correct, command_undertest):
    inputs = exec_getstdout(command_geninputs)
    oks = 0
    ngs = 0
    try:
        for text in inputs:
            output_expect = exec_putstdin_getstdout(command_correct, text)
            output_actual = exec_putstdin_getstdout(command_undertest, text)
            if output_actual == output_expect:
                print("OK on IN = ", repr(text))
                oks += 1
            else:
                print("NG!!!! on IN = ", repr(text))
                print("expect = ", repr(output_expect))
                print("actual = ", repr(output_actual))
                ngs += 1
    finally:
        print()
        print("OK count:", oks)
        print("NG count:", ngs)

if __name__ == "__main__":
    try:
        a1, a2, a3 = sys.argv[1], sys.argv[2], sys.argv[3]
    except IndexError:
        print("validaa 'command_geninputs' 'command_correct' 'command_undertest'")
        print()
        print("Example:")
        print("    validaa 'lua5.3 geninputs.lua' 'lua5.3 naive.lua' 'lua5.3 a.lua'")
    else:
        main(a1, a2, a3)
